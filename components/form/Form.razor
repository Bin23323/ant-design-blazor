@namespace AntDesign
@inherits AntDomComponentBase
@typeparam TModel
@using Microsoft.AspNetCore.Components.Forms;
@using AntDesign.Internal;

@{
    Dictionary<string, object> attributes = [];

#if NET8_0_OR_GREATER
    attributes.Add(nameof(Enhance), Enhance);
    attributes.Add(nameof(EditForm.FormName),Name);
#endif
}

<Spin Spinning="Loading">
    <EditForm @ref="_form"
              class="@ClassMapper.Class"
              style="@Style"
              id="@Id"
              @attributes="attributes"
              EditContext="_editContext"
              OnValidSubmit="OnValidSubmit"
              OnInvalidSubmit="OnInvalidSubmit">
        @if (ValidateMode.IsIn(FormValidateMode.Rules, FormValidateMode.Complex))
        {
            <FormRulesValidator @ref="_rulesValidator" />
        }
        @if (ValidateMode.IsIn(FormValidateMode.Default, FormValidateMode.Complex))
        {
            @Validator
        }
        <CascadingValue Value="this" Name="Form" TValue="IForm" IsFixed="@true">
            @if (!string.IsNullOrEmpty(Size))
            {
                <CascadingValue Value="Size" Name="FormSize">
                    @ChildContent(Model)
                </CascadingValue>
            }
            else
            {
                @ChildContent(Model)
            }

        </CascadingValue>
    </EditForm>
</Spin>