@namespace AntDesign
@using AntDesign.TableModels
@using AntDesign.Table

@inherits ColumnBase

@if (IsHeaderTemplate)
{
    @RenderHeader()
}
else if (IsRowTemplate)
{
    @RenderBody(RowData)
}

@code{

    RenderFragment IRenderColumn.RenderPlaceholder()
    {
        return@<td style="padding: 0px; border: 0px; height: 0px;"></td>;
    }

    RenderFragment IRenderColumn.RenderMeasure()
    {
        return@<td style="padding: 0px; border: 0px; height: 0px;"><div style="height: 0px; overflow: hidden;">&nbsp;</div></td>;
    }


    RenderFragment IRenderColumn.RenderColGroup()
    {
        if (Width != null)
        {
            return@<col class="ant-table-selection-col" style="width: @((CssSizeLength)Width); min-width: @((CssSizeLength)Width);">;
        }
        else
        {
            return@<col class="ant-table-selection-col">;
        }
    }
    RenderFragment IRenderColumn.RenderHeader() => RenderHeader();
    RenderFragment RenderHeader()
    {
        return
    @<th class="@ClassMapper.Class ant-table-selection-column" style="@_headerFixedStyle @HeaderStyle" @key="@Key" colspan="@HeaderColSpan">
        @if (Type == "checkbox")
            {
                <Checkbox Checked="Table.AllSelected" CheckedChanged="(e)=>OnCheckedChange(e,null,true)" Indeterminate="Indeterminate" Disabled="IsHeaderDisabled" />
            }
            </th>
    ;
    }
    RenderFragment IRenderColumn.RenderBody(RowData rowData) => RenderBody(rowData);
    RenderFragment RenderBody(RowData rowData)
    {
        return @<td class="@ClassMapper.Class ant-table-selection-column" style="@_fixedStyle @Style" @key="@Key" rowspan="@RowSpan" colspan="@ColSpan">

            @if (CellRender != null)
            {
                var cellData = new CellData(rowData);
                @CellRender(cellData)
            }
            else if (ChildContent != null)
            {
                @ChildContent
            }
            else
            {
                @if (Type == "checkbox")
                {
                    <Checkbox Checked="rowData.Selected" Disabled="Disabled" CheckedChanged="e=>OnCheckedChange(e,rowData)" />
                }
                else if (Type == "radio")
                {
                    <Radio Checked="rowData.Selected" Disabled="Disabled" CheckedChanged="e=>OnCheckedChange(e,rowData)" TValue="bool" />
                }
            }
        </td>;
    }
}